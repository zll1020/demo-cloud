单体应用存在的一些问题
    复杂性高
    技术债务
    部署频率低
    可靠性差
    扩展能力受限
    阻碍技术创新

微服务架构的优点
    易于开发和维护
    单个微服务启动比较快
    局部修改容易部署
    技术栈不受限
    按需伸缩

微服务架构面临的挑战
    运维要求比较高
    分布式固有的复杂性（系统容错，网络延迟，分布式事务）
    接口调整成本高
    重复劳动

微服务设计原则
    单一指责原则
    服务自治原则
    轻量级通信机制
    微服务粒度

Spring Cloud 特点
    约定优于配置
    适用于各种环境
    隐藏了组件的复杂性，并提供声明式，无xml的配置方式
    轻量级的组件
    组件丰富，功能齐全
    选型中立，丰富（Cloud，Alibaba）
    灵活

